@model IEnumerable<Practice>

@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject IUserContext UserContext

@{
    ViewData["DeleteTitle"] = "practices";
    ViewData["Title"] = "Practice List By Task";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var userPermissionsJson = "";
    var userPermissions = new List<RolesPermissions>();
    var httpContext = ViewContext.HttpContext;
    if (httpContext != null)
    {
        userPermissionsJson = httpContext.Session.GetString("UserPermissions");
        userPermissions = JsonConvert.DeserializeObject<List<RolesPermissions>>(userPermissionsJson, new JsonSerializerSettings
                {
                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore
                });
    }
}



<div class="row">
    <div class="col-lg-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h4 class="card-title">Practice Management View</h4>
                    </div>
                    <div class="col-md-6 text-end">
                        @if (userPermissions != null && userPermissions.Any(p => p.Permission.Name == "Practice" && p.View == true && p.Add == true))
                        {
                            <a class="btn btn-primary me-2" href="~/Practice/Add">
                                <i class="fa-solid fa-plus"></i> Add New Practice
                            </a>
                        }
                    </div>
                </div>

                <table class="table">
                    <thead>
                        <tr>


                            <th>
                                PRACTICE
                            </th>
                            <th>

                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model != null)
                        {
                            foreach (var item in Model)
                            {
                                <tr v-for="item in items" :key="item.id">

                                    <td>
                                        <div class="row">
                                            <div class="col">
                                                <b>
                                                    @* <code title="Task">
                                            @(item.Task.Objective.Activity.Function.Department.Company.Code + "." + item.Task.Objective.Activity.Function.Department.Code + "."
                                            + item.Task.Objective.Activity.Function.Code + "." + item.Task.Objective.Activity.Code + "." + item.Task.Objective.Code + "." + item.Task.Code + "." +item.Code)
                                            </code> *@
                                                    <code>
                                                        @item.Code
                                                    </code>
                                                    ›
                                                    @(item.Name != null ? item.Name : "N/A")
                                                </b>
                                            </div>

                                        </div>
                                    </td>
                                    @if (userPermissions != null && userPermissions.Any(p => p.Permission.Name == "Practice" && p.View == true && (p.Edit == false && p.Delete == false)))
                                    {
                                        <td>
                                            <a asp-action="View" asp-controller="Practice" asp-route-id="@item.Id" title="View"><i class="fa-solid fa-eye"></i></a>
                                        </td>
                                    }
                                    @if (userPermissions != null && userPermissions.Any(p => p.Permission.Name == "Practice" && p.View == true && (p.Edit == false && p.Delete == true)))
                                    {
                                        <td>
                                            <a asp-action="View" asp-controller="Practice" asp-route-id="@item.Id" title="View"><i class="fa-solid fa-eye"></i></a>
                                        </td>
                                    }
                                    @if (userPermissions != null && userPermissions.Any(p => p.Permission.Name == "Practice" && p.View == true && p.Edit == true))
                                    {
                                        <td>
                                            <a asp-action="Edit" asp-controller="Practice" asp-route-id="@item.Id" title="Edit"><i class="fa-solid fa-pen-to-square"></i></a>
                                        </td>
                                    }
                                    @if (userPermissions != null && userPermissions.Any(p => p.Permission.Name == "Practice" && p.View == true && p.Delete == true))
                                    {
                                        <td>
                                            <a data-actions-id="@item.Id" title="Delete" id="btnDelete" href="#"><i class="fa-solid fa-trash"></i></a>
                                        </td>
                                    }


                                </tr>

                            }
                        }
                    </tbody>
                </table>

            </div>
        </div>
    </div>
</div>
