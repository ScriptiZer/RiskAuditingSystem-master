@model RiskIdentification
@using AuditingSystem.Database;
@using AuditingSystem.Entities;
@{
    ViewData["Title"] = "Risk Identification Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/css/addeditstyle.css" rel="stylesheet" />
<div class="row">

    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Edit Risk Identification</h4>
                <form class="forms-sample" id="EditForm">
                    <div class="row">
                        <div class="col-6">
                            <div class="form-group">
                                <input type="hidden" value="@Model.Id" id="controlId" />
                                <label for="Code">Code</label>
                                <input type="hidden" id="RiskIdentificationId" value="@Model.Id" />
                                <input type="text" class="form-control" id="Code" name="Code" placeholder="Generate Code" asp-for="Code">
                                <span asp-validation-for="Code" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="Name">Risk Title</label>
                                <textarea type="text" class="form-control" id="Name" name="Name" placeholder="Risk Identification Name" asp-for="Name"></textarea>
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="RiskRatingRationalization">Risk Rating Rationalization</label>
                                <textarea type="text" class="form-control" id="RiskRatingRationalization" name="RiskRatingRationalization" placeholder="Risk Rating Rationalization" asp-for="RiskRatingRationalization"></textarea>
                                <span asp-validation-for="RiskRatingRationalization" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="Description">Description</label>
                                <textarea type="text" class="form-control" id="Description" name="Description" placeholder="Description" asp-for="Description"></textarea>
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>

                        </div>
                        <div class="col-6">

                            <div class="form-group">
                                <label asp-for="CompanyId">Company</label>
                                <select asp-for="CompanyId" asp-items="@(ViewBag.CompanyId as SelectList)" class="form-control" id="Company" name="CompanyId">
                                    <option value="">-- Select One --</option>
                                </select>
                                <span asp-validation-for="CompanyId" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="DepartmentId">Department</label>
                                <input type="hidden" value="@Model.DepartmentId" id="DeptId" />
                                <select asp-for="DepartmentId" asp-items="@(ViewBag.DepartmentId as SelectList)" class="form-control" id="Department" name="DepartmentId">
                                    <option value="">-- Select One --</option>
                                </select>
                                <span asp-validation-for="DepartmentId" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="FunctionId">Function</label>
                                <input type="hidden" value="@Model.FunctionId" id="FuncId" />
                                <select asp-for="FunctionId" asp-items="@(ViewBag.FunctionId as SelectList)" class="form-control" id="Function" name="FunctionId">
                                    <option value="">-- Select One --</option>
                                </select>
                                <span asp-validation-for="FunctionId" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label for="RiskCategoryId">Risk Category</label>
                                @Html.DropDownList("RiskCategoryId",  ViewBag.RiskCategoryId as SelectList, "-- Select One --", new { @class = "form-control", @id = "RiskCategory" , @name="RiskCategoryId"})
                                <span asp-validation-for="RiskCategoryId" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="RiskImpactId">Risk Impact</label>
                                @Html.DropDownList("RiskImpactId", ViewBag.RiskImpactId as SelectList, "-- Select One --", new { @class = "form-control", @id = "RiskImpact" , @name="RiskImpactId"})
                                <span asp-validation-for="RiskImpactId" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="RiskLikelihoodId">Risk Like lihood</label>
                                @Html.DropDownList("RiskLikelihoodId", ViewBag.RiskLikelihoodId as SelectList, "-- Select One --", new { @class = "form-control", @id = "RiskLikelihood" , @name="RiskLikelihoodId"})
                                <span asp-validation-for="RiskLikelihoodId" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="InherentRiskRating">Inherent Risk Rating</label>
                                <input disabled type="text" class="form-control" id="InherentRiskRating" name="InherentRiskRating" placeholder="Inherent Risk Rating" asp-for="InherentRiskRating">
                                <span asp-validation-for="InherentRiskRating" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="InherentRiskStatus">Inherent Risk Status</label>
                                <input asp-for="InherentRiskStatus" type="text" class="form-control" id="InherentRiskStatus" name="InherentRiskStatus" readonly placeholder="Inherent Risk Status">
                                <span asp-validation-for="InherentRiskStatus" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="float-end">
                        <button id="btnCancel" class="btn btn-secondary">Cancel</button>
                        <button id="editLinkControlButton" type="button" class="btn btn-primary">Edit Link Control</button>
                        <button id="linkWithControlButton" type="button" class="btn btn-primary">Link with Control</button>
                        <button id="saveButton" type="button" class="btn btn-primary">Save Data</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            //  $("#Department").prop("disabled", true);
            // $("#Function").prop("disabled", true);
            var comp = $("#Company").val();
            var dept = $("#Department").val();
            $.ajax({
                url: "/RiskIdentification/GetDepartmentsByCompany",
                data: { CompanyId: comp },
                type: "GET",
                success: function (data) {
                    $("#Department").prop("disabled", false);

                    var options = '<option value="">-- Select One --</option>';

                    if (data && data["$values"]) {
                        data["$values"].forEach(function (item) {
                            var selected = item.id == $("#DeptId").val() ? 'selected' : '';
                            options += '<option value="' + item.id + '" ' + selected + '>' + item.name + '</option>';
                        });
                        $("#Department").html(options);
                    }
                }
            });

            $.ajax({
                url: "/RiskIdentification/GetFunctionsByDepartment",
                data: { departmentId: dept },
                type: "GET",
                success: function (data) {
                    $("#Function").prop("disabled", false);

                    var options = '<option value="">-- Select One --</option>';

                    if (data && data["$values"]) {
                        data["$values"].forEach(function (item) {
                            var selected = item.id == $("#FuncId").val() ? 'selected' : '';
                            options += '<option value="' + item.id + '" ' + selected + '>' + item.name + '</option>';
                        });
                        $("#Function").html(options);
                    }
                }
            });

            $("#Company").change(function () {
                var CompanyId = $(this).val();
                $.ajax({
                    url: "/RiskIdentification/GetDepartmentsByCompany",
                    data: { CompanyId: CompanyId },
                    type: "GET",
                    success: function (data) {
                        $("#Department").prop("disabled", false);

                        var options = '<option value="">-- Select One --</option>';

                        if (data && data["$values"]) {
                            data["$values"].forEach(function (item) {
                                options += '<option value="' + item.id + '">' + item.name + '</option>';
                            });
                            $("#Department").html(options);
                        }
                    }
                });
            });

            $("#Department").change(function () {
                var departmentId = $(this).val();
                $.ajax({
                    url: "/RiskIdentification/GetFunctionsByDepartment",
                    data: { departmentId: departmentId },
                    type: "GET",
                    success: function (data) {
                        $("#Function").prop("disabled", false);

                        var options = '<option value="">-- Select One --</option>';

                        if (data && data["$values"]) {
                            data["$values"].forEach(function (item) {
                                options += '<option value="' + item.id + '">' + item.name + '</option>';
                            });
                            $("#Function").html(options);
                        }
                    }
                });
            });

            $('#Description').summernote();
            $('#RiskRatingRationalization').summernote();
            $('#Name').summernote();

            $("#Function").change(function () {
                $("#Name").val($(this).val());
            });


            $("#linkWithControlButton").click(function () {
                var htmlDescription = $('#Description').summernote('code');
                var htmlName = $('#Name').summernote('code');

                var htmlRiskRatingRationalization = $('#RiskRatingRationalization').summernote('code');

                var formData = {
                    Id: $("#RiskIdentificationId").val(),
                    Code: $("#Code").val(),
                    Name: htmlName,
                    CompanyId: $("#Company").val(),
                    DepartmentId: $("#Department").val(),
                    FunctionId: $("#Function").val(),
                    Description: htmlDescription,
                    RiskCategoryId: $("#RiskCategory").val(),
                    RiskImpactId: $("#RiskImpact").val(),
                    RiskLikelihoodId: $("#RiskLikelihood").val(),
                    RiskRatingRationalization: htmlRiskRatingRationalization,
                    InherentRiskRating: $("#InherentRiskRating").val(),
                    InherentRiskStatus: $("#InherentRiskStatus").val()
                };

                    $.ajax({
                        url: '/RiskIdentification/Edit_AddWithLink',
                        type: 'POST',
                        data: formData,
                        success: function (result) {
                            var riskIdentificationId = result.id;
                            window.location.href = '/Control/Add?riskIdentificationId=' + riskIdentificationId;

                        },
                    error: function (error) {
                        if (error.responseJSON && error.responseJSON.error === "DuplicateData") {
                            swal({
                                title: "Opps...",
                                text: "Company and Department information has already been added!",
                                icon: "error",
                                position: "top-end",
                                timer: 2000,
                                allowOutsideClick: false,
                                showConfirmButton: false,
                                showCancelButton: false,
                                showCloseButton: false
                            });
                        } else {
                            swal({
                                title: "Opps...",
                                text: "Something went wrong!",
                                icon: "error",
                                position: "top-end",
                                timer: 2000,
                                allowOutsideClick: false,
                                showConfirmButton: false,
                                showCancelButton: false,
                                showCloseButton: false
                            });
                        }
                    }
                    });
            });


            $("#RiskImpact, #RiskLikelihood").change(function () {
                var riskImpactRate = parseInt($("#RiskImpact option:selected").text().split('-')[0].trim()) || 0;
                var riskLikelihoodRate = parseInt($("#RiskLikelihood option:selected").text().split('-')[0].trim()) || 0;
                var sum = riskImpactRate + riskLikelihoodRate;
                $("#InherentRiskRating").val(sum);
                if ($("#InherentRiskRating").val() >= 9) {
                    $("#InherentRiskStatus").val("Critical");
                } else if ($("#InherentRiskRating").val() >= 7) {
                    $("#InherentRiskStatus").val("High");
                } else if ($("#InherentRiskRating").val() >= 5) {
                    $("#InherentRiskStatus").val("Medium");
                } else {
                    $("#InherentRiskStatus").val("Low");
                }
            });

            $("#editLinkControlButton").click(function () {
                swal({
                    title: "Saving...",
                    text: "Please wait.",
                    allowOutsideClick: false,
                    showConfirmButton: false, 
                    showCancelButton: false, 
                    showCloseButton: false, 
                    onBeforeOpen: () => {
                        swal.showLoading(); 
                    }
                });

                if ($("#EditForm").valid()) {
                    setTimeout(function () {
                        firstFunction();
                        secondFunction();
                    }, 2000);
                }
            });


            function firstFunction() {
                var htmlDescription = $('#Description').summernote('code');
                var htmlName = $('#Name').summernote('code');
                var htmlRiskRatingRationalization = $('#RiskRatingRationalization').summernote('code');
                var formData = {
                    Code: $("#Code").val(),
                    Name: htmlName,
                    CompanyId: $("#Company").val(),
                    DepartmentId: $("#Department").val(),
                    FunctionId: $("#Function").val(),
                    Description: htmlDescription,
                    RiskCategoryId: $("#RiskCategory").val(),
                    RiskImpactId: $("#RiskImpact").val(),
                    RiskLikelihoodId: $("#RiskLikelihood").val(),
                    RiskRatingRationalization: htmlRiskRatingRationalization,
                    InherentRiskRating: $("#InherentRiskRating").val(),
                    InherentRiskStatus: $("#InherentRiskStatus").val()
                };

                $.ajax({
                    url: "/api/RiskIdentifications/" + @Model.Id,
                    method: "PUT",
                    dataType: 'json',
                    contentType: "application/json",
                    data: JSON.stringify(formData),
                    success: function (response) {
                        console.log("Edit Risk Identification is done!");
                    },
                    error: function (error) {
                        if (error.responseJSON && error.responseJSON.error === "DuplicateData") {
                            swal({
                                title: "Opps...",
                                text: "Company and Department information has already been added!",
                                icon: "error",
                                position: "top-end",
                                timer: 2000,
                                allowOutsideClick: false,
                                showConfirmButton: false,
                                showCancelButton: false,
                                showCloseButton: false
                            });
                        } else {
                            swal({
                                title: "Opps...",
                                text: "Something went wrong!",
                                icon: "error",
                                position: "top-end",
                                timer: 2000,
                                allowOutsideClick: false,
                                showConfirmButton: false,
                                showCancelButton: false,
                                showCloseButton: false
                            });
                        }
                    }
                });
            }

            function secondFunction() {
                var riskIdentificationId = @Model.Id;
                var controlId = $("#controlId").val();

                $.ajax({
                    url: '/Control/Edit',
                    type: 'GET',
                    data: { id: 0, riskIdentificationId: riskIdentificationId },
                    success: function (data) {
                        window.location.href = '/Control/Edit/' + data.id + '?riskIdentificationId=' + riskIdentificationId;
                    },
                    error: function (error) {
                        if (error.responseJSON && error.responseJSON.error === "DuplicateData") {
                            swal({
                                title: "Opps...",
                                text: "Company and Department information has already been added!",
                                icon: "error",
                                position: "top-end",
                                timer: 2000,
                                allowOutsideClick: false,
                                showConfirmButton: false,
                                showCancelButton: false,
                                showCloseButton: false
                            });
                        } else {
                            swal({
                                title: "Opps...",
                                text: "Something went wrong!",
                                icon: "error",
                                position: "top-end",
                                timer: 2000,
                                allowOutsideClick: false,
                                showConfirmButton: false,
                                showCancelButton: false,
                                showCloseButton: false
                            });
                        }
                    }
                });
            }

            $("#EditForm").validate({
                rules: {
                    Code: {
                        required: true
                    },
                    Name: {
                        required: true
                    },
                    CompanyId: {
                        required: true
                    },
                    DepartmentId: {
                        required: true
                    },
                    FunctionId: {
                        required: true
                    },
                    Description: {
                        required: true
                    },
                    RiskCategoryId: {
                        required: true
                    },
                    RiskImpactId: {
                        required: true
                    },
                    RiskLikelihoodId: {
                        required: true
                    },
                    RiskRatingRationalization: {
                        required: true
                    },
                    InherentRiskRating: {
                        required: true
                    }
                },
                messages: {
                    Code: {
                        required: "The Code field is required"
                    },
                    Name: {
                        required: "The Name field is required"
                    },
                    CompanyId: {
                        required: "The Company field is required"
                    },
                    DepartmentId: {
                        required: "The Department field is required"
                    },
                    FunctionId: {
                        required: "The Function field is required"
                    },
                    Description: {
                        required: "The Description field is required"
                    },
                    RiskCategoryId: {
                        required: "The Risk Category field is required"
                    },
                    RiskImpactId: {
                        required: "The Risk Impact field is required"
                    },
                    RiskLikelihoodId: {
                        required: "The Risk Likelihood field is required"
                    },
                    RiskRatingRationalization: {
                        required: "The Risk Rating Rationalization field is required"
                    },
                    InherentRiskRating: {
                        required: "The Inherent Risk Rating field is required"
                    }
                },
                errorPlacement: function (error, element) {
                    if (element.is("select")) {
                        error.insertAfter(element.siblings("span"));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });

            $(document).on("click", "#btnCancel", function (e) {
                e.preventDefault();
                window.location.href = '/RiskIdentification/Index';
            });

            $("#saveButton").click(function () {
                var htmlDescription = $('#Description').summernote('code');
                var htmlName = $('#Name').summernote('code');

                var htmlRiskRatingRationalization = $('#RiskRatingRationalization').summernote('code');
                if ($("#EditForm").valid()) {
                    var formData = {
                        Code: $("#Code").val(),
                        Name: htmlName,
                        CompanyId: $("#Company").val(),
                        DepartmentId: $("#Department").val(),
                        FunctionId: $("#Function").val(),
                        Description: htmlDescription,
                        RiskCategoryId: $("#RiskCategory").val(),
                        RiskImpactId: $("#RiskImpact").val(),
                        RiskLikelihoodId: $("#RiskLikelihood").val(),
                        RiskRatingRationalization: htmlRiskRatingRationalization,
                        InherentRiskRating: $("#InherentRiskRating").val(),
                        InherentRiskStatus: $("#InherentRiskStatus").val()
                    };

                    swal({
                        title: "Saving...",
                        text: "Please wait.",
                        allowOutsideClick: false,
                        showConfirmButton: false, // إخفاء زر التأكيد
                        showCancelButton: false, // إخفاء زر الإلغاء
                        showCloseButton: false, // إخفاء زر الإغلاق
                        onBeforeOpen: () => {
                            swal.showLoading(); // إضافة شريط التقدم
                        }
                    });

                    setTimeout(function () {
                        $.ajax({
                            url: "/api/RiskIdentifications/" + @Model.Id,
                            method: "PUT",
                            dataType: 'json',
                            contentType: "application/json",
                            data: JSON.stringify(formData),
                            success: function (response) {
                                swal.close(); // إغلاق SweetAlert بعد النجاح
                                swal({
                                    title: "Success",
                                    text: "Your data has been saved",
                                    icon: "success",
                                    position: "top-end", // تحديد الوضعية في أعلى الزاوية اليمنى
                                    timer: 2000, // فترة الزمن بالميلي ثانية (هنا 2000 ميلي ثانية = 2 ثانية)
                                    allowOutsideClick: false,
                                    showConfirmButton: false, // إخفاء زر التأكيد
                                    showCancelButton: false, // إخفاء زر الإلغاء
                                    showCloseButton: false // إخفاء زر الإغلاق
                                }).then(function () {
                                    window.location.href = '/RiskIdentification/Index';
                                });
                            },
                            error: function (error) {
                                if (error.responseJSON && error.responseJSON.error === "DuplicateData") {
                                    swal({
                                        title: "Opps...",
                                        text: "Company and Department information has already been added!",
                                        icon: "error",
                                        position: "top-end",
                                        timer: 2000,
                                        allowOutsideClick: false,
                                        showConfirmButton: false,
                                        showCancelButton: false,
                                        showCloseButton: false
                                    });
                                } else {
                                    swal({
                                        title: "Opps...",
                                        text: "Something went wrong!",
                                        icon: "error",
                                        position: "top-end",
                                        timer: 2000,
                                        allowOutsideClick: false,
                                        showConfirmButton: false,
                                        showCancelButton: false,
                                        showCloseButton: false
                                    });
                                }
                            }
                        });
                    }, 2000);
                }
            });
        });
    </script>
}