@model IEnumerable<Control>
@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@inject IUserContext UserContext

@{
    ViewData["DeleteTitle"] = "controls";
    ViewData["Title"] = "Control List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    var userPermissionsJson = "";
    var userPermissions = new List<RolesPermissions>();
    var httpContext = ViewContext.HttpContext;
    if (httpContext != null)
    {
        userPermissionsJson = httpContext.Session.GetString("UserPermissions");
        userPermissions = JsonConvert.DeserializeObject<List<RolesPermissions>>(userPermissionsJson, new JsonSerializerSettings
                {
                    ReferenceLoopHandling = ReferenceLoopHandling.Ignore
                });
    }
}


<div class="row">
    <div class="col-lg-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h4 class="card-title">Control Management View</h4>
                    </div>
                    <div class="col-md-6 text-end">
                        @if (userPermissions != null && userPermissions.Any(p => p.Permission.Name == "Control" && p.View == true && p.Add == true))
                        {
                            <a class="btn btn-primary me-2" href="~/Control/Add">
                                <i class="fa-solid fa-plus"></i> Add New Control
                            </a>
                        }
                    </div>
                </div>
                <div class="row p-3 m-3" style="box-shadow: 0px 2px 5px 0px;">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="ControlTypeId">Control Type</label>
                            <select style="border:1px solid #c1c1c1" class="form-control" id="ControlType" asp-items="ViewBag.ControlTypeId">
                                <option value="">All Control Types</option>
                            </select>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="ControlProcessId">Control Process</label>
                            <select style="border:1px solid #c1c1c1" class="form-control" id="ControlProcess" asp-items="ViewBag.ControlProcessId">
                                <option value="">All Control Processes</option>
                            </select>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="ControlFrequencyId">Control Frequency</label>
                            <select style="border:1px solid #c1c1c1" class="form-control" id="ControlFrequency" asp-items="ViewBag.ControlFrequencyId">
                                <option value="">All Control Frequencies</option>
                            </select>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <div class="form-group">
                            <label for="ControlEffectivenessId">Control Effectiveness </label>
                            <select style="border:1px solid #c1c1c1" class="form-control" id="ControlEffectiveness" asp-items="ViewBag.ControlEffectivenessId">
                                <option value="">All Control Effectivenesses</option>
                            </select>
                        </div>
                    </div>
                </div>

                <br />
                <br />
                <div class="table-responsive">
                    <table style="width:2000px" id="tableList" class="table table-striped table-bordered tableList">
                        <thead>
                            <tr>
                                <th>Code</th>
                                <th>Name</th>
                                <th>Description</th>
                                <th>Control Type</th>
                                <th>Control Process</th>
                                <th>Control Frequency</th>
                                <th>Control Effectiveness</th>
                                <th>Risk Identification</th>
                                <th style="text-align:center; ">Control Effectiveness Rating</th>
                                <th colspan="2">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                if(item.RiskIdentification.IsDeleted == false)
                                {
                                    <tr id="tr">
                                        <td>@item.Code</td>
                                        <td>@Html.Raw(item.Name)</td>
                                        <td>@Html.Raw(item.Description)</td>
                                        <td style="text-align:center; background-color:@item.ControlType.BGColor; color:@item.ControlType.FontColor;">@item.ControlType.Name</td>
                                        <td style="text-align:center; background-color:@item.ControlProcess.BGColor; color:@item.ControlProcess.FontColor;">@item.ControlProcess.Name</td>
                                        <td style="text-align:center; background-color:@item.ControlFrequency.BGColor; color:@item.ControlFrequency.FontColor;">@item.ControlFrequency.Name</td>
                                        <td style="text-align:center; background-color:@item.ControlEffectiveness.BGColor; color:@item.ControlEffectiveness.FontColor;">@item.ControlEffectiveness.Name</td>
                                        <td>@Html.Raw(item.RiskIdentification.Name)</td>
                                        <td style="text-align:center; ">@item.ControlEffectivenessRating</td>
                                        @if (userPermissions != null && userPermissions.Any(p => p.Permission.Name == "Control" && p.View == true && (p.Edit == false && p.Delete == false)))
                                        {
                                            <td>
                                                <a asp-action="View" asp-controller="Control" asp-route-id="@item.Id" title="View"><i class="fa-solid fa-eye"></i></a>
                                            </td>
                                        }
                                        @if (userPermissions != null && userPermissions.Any(p => p.Permission.Name == "Control" && p.View == true && (p.Edit == false && p.Delete == true)))
                                        {
                                            <td>
                                                <a asp-action="View" asp-controller="Control" asp-route-id="@item.Id" title="View"><i class="fa-solid fa-eye"></i></a>
                                            </td>
                                        }
                                        @if (userPermissions != null && userPermissions.Any(p => p.Permission.Name == "Control" && p.View == true && p.Edit == true))
                                        {
                                            <td>
                                                <a asp-action="Edit" asp-controller="Control" asp-route-id="@item.Id" title="Edit"><i class="fa-solid fa-pen-to-square"></i></a>
                                            </td>
                                        }
                                        @if (userPermissions != null && userPermissions.Any(p => p.Permission.Name == "Control" && p.View == true && p.Delete == true))
                                        {
                                            <td>
                                                <a data-actions-id="@item.Id" title="Delete" id="btnDelete" href="#"><i class="fa-solid fa-trash"></i></a>
                                            </td>
                                        }                                        
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
                <div class="text-center">
                    <div class="row">
                        <div class="col-md-6" style="text-align: left; margin-top: 15px;">
                            <p id="totalControlRow">
                                Showing @Model.Count() of @ViewBag.TotalRow entries
                            </p>
                        </div>
                        <div class="col-md-6">
                            <nav aria-label="Page navigation" class="float-end mt-3">
                                <ul class="pagination" id="pagination">
                                    <!-- Previous button -->
                                    <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")" id="prev">
                                        <a class="page-link" href="?sODTypeId=@ViewBag.sODTypeId&page=@(ViewBag.CurrentPage - 1)&pageSize=@ViewBag.PageSize" aria-label="Previous">
                                            <span aria-hidden="true">&laquo;</span>
                                        </a>
                                    </li>

                                    <!-- Page numbers -->
                                    @for (int i = ViewBag.CurrentPage - 1; i <= Math.Min(ViewBag.CurrentPage + 3, ViewBag.TotalPages); i++)
                                    {
                                        if (i > 0)
                                        {
                                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                                <a class="page-link" href="?sODTypeId=@ViewBag.sODTypeId&page=@i&pageSize=@ViewBag.PageSize">@i</a>
                                            </li>
                                        }
                                    }

                                    <!-- Next button -->
                                    @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                    {
                                        <li class="page-item" id="next">
                                            <a class="page-link" href="?sODTypeId=@ViewBag.sODTypeId&page=@(ViewBag.CurrentPage + 1)&pageSize=@ViewBag.PageSize" aria-label="Next">
                                                <span aria-hidden="true">&raquo;</span>
                                            </a>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item disabled" id="next">
                                            <span class="page-link" aria-label="Next">
                                                <span aria-hidden="true">&raquo;</span>
                                            </span>
                                        </li>
                                    }

                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-9"></div>
    <div class="col-md-3">
        <div class="form-group">
            <label for="AverageControl">Average Control</label>
            <input type="text" class="form-control" id="AverageControl" name="AverageControl" readonly>
        </div>
    </div>
</div>

@section Scripts{
    @* <script src="https://cdn.rawgit.com/dobtco/jquery-resizable-columns/v1.0.9/jquery.resizableColumns.min.js"></script> *@

    <script>
        // $("td,th")
        //     .css({
        //         position: "relative"
        //     })
        //     .prepend("<div class='resizer'></div>")
        //     .resizable({
        //         resizeHeight: false,
        //         handleSelector: "",
        //         onDragStart: function (e, $el, opt) {
        //             if (!$(e.target).hasClass("resizer"))
        //                 return false;
        //             return true;
        //         }
        //     });
        var table = $('.tableList');


        table.draggable({
            axis: 'x',
            cursor: 'grabbing',
            scroll: false,
            start: function (event, ui) {
                $.ui.ddmanager.current.cancelHelperRemoval = true;
            }
        });

        function calculateAverageControlEffectivenessRating() {
            var totalControlEffectivenessRating = 0;
            var rowCount = 0;

            $("#tableList tbody tr").each(function () {
                var controlEffectivenessRating = parseFloat($(this).find("td:eq(8)").text()) || 0; 
                totalControlEffectivenessRating += controlEffectivenessRating;
                rowCount++;
            });

            var averageControlEffectivenessRating = rowCount > 0 ? totalControlEffectivenessRating / rowCount : 0;

            $("#AverageControl").val(averageControlEffectivenessRating.toFixed(2));
        }

        calculateAverageControlEffectivenessRating();

        $(document).ready(function () {
            // Pagination logic
            var currentPage = parseInt("@ViewBag.CurrentPage");
            var totalPages = parseInt("@ViewBag.TotalPages");
            var pageSize = parseInt("@ViewBag.PageSize");

            // Initially hide all page links
            $(".pagination li").hide();

            // Show the first five page links
            $(".pagination li:lt(5)").show();

            $("#prev").click(function () {
                if (currentPage > 1) {
                    if ((currentPage - 1) % 5 === 1) {
                        $(".pagination li").hide(); // Hide all page links
                        $(".pagination li:gt(0):lt(5)").show(); // Show pages 2 to 6
                    }
                    window.location.href = "?sODTypeId=" + $("#sODTypeId").val() + "&page=" + (currentPage - 1) + "&pageSize=" + pageSize;
                }
            });

            $("#next").css("display", "block");
            $("#next").click(function () {
                if (currentPage < totalPages) {
                    if ((currentPage + 1) % 5 === 1) {
                        $(".pagination li").hide(); // Hide all page links
                        $(".pagination li:gt(0):lt(5)").show(); // Show pages 2 to 6
                    }
                    window.location.href = "?sODTypeId=" + $("#sODTypeId").val() + "&page=" + (currentPage + 1) + "&pageSize=" + pageSize;
                } else {
                    // Disable next button and change its appearance
                    $("#next").addClass("disabled").find("a").removeAttr("href").attr("aria-disabled", true);
                }
            });

            $("#ControlType, #ControlProcess, #ControlFrequency, #ControlEffectiveness").on("change", function () {
                var controlTypeId = $("#ControlType").val();
                var controlProcessId = $("#ControlProcess").val();
                var controlFrequencyId = $("#ControlFrequency").val();
                var controlEffectivenessId = $("#ControlEffectiveness").val();

                $.ajax({
                    url: '/Control/FilterRiskControlTable',
                    type: 'GET',
                    data: { controlTypeId: controlTypeId, controlProcessId: controlProcessId, controlFrequencyId: controlFrequencyId, controlEffectivenessId: controlEffectivenessId },
                    dataType: 'json',
                    success: function (response) {
                        $('tbody').empty();

                        $.each(response.data.$values, function (index, item) {
                            var row = '<tr>' +
                                '<td>' + item.controlCode + '</td>' +
                                '<td>' + item.controlName + '</td>' +
                                '<td>' + item.controlDescription + '</td>' +
                                '<td style="text-align:center; background-color:' + item.controlTypeBGColor + ';color:' + item.controlTypeFontColor + '">' + item.controlTypeName + '</td>' +
                                '<td style="text-align:center; background-color:' + item.controlProcessBGColor + ';color:' + item.controlProcessFontColor + '">' + item.controlProcessName + '</td>' +
                                '<td style="text-align:center; background-color:' + item.controlFrequencyBGColor + ';color:' + item.controlFrequencyFontColor + '">' + item.controlFrequencyName + '</td>' +
                                '<td style="text-align:center; background-color:' + item.controlEffectivenessBGColor + ';color:' + item.controlEffectivenessFontColor + '">' + item.controlEffectivenessName + '</td>' +
                                '<td>' + item.riskIdentificationName + '</td>' +
                                '<td>' + item.controlEffectivenessRating + '</td>' +
                                '<td><a class="btn btn-primary" href="~/Control/Edit/' + item.id + '"> <i class="fa-solid fa-pen-to-square"></i> Edit</a></td>' +
                                '<td><button class="btn btn-danger" data-actions-id="' + item.id + '" title="Delete" id="btnDelete"><i class="fa-solid fa-trash"></i></a> Delete</td>' +
                                '</tr>';

                            $('tbody').append(row);
                        });

                        $('#totalControlRow').text(response.totalControlRow + " rows have been filtered");
                        $("#AverageControl").val(response.totalRiskControl.toFixed(2));

                        $("#pagination").css("display", "none");
                        var visibleRows = $('tbody tr:visible').length;
                        $('#noDataMessage').toggle(visibleRows === 0);
                        $('#resetFilterButton').show();
                    },
                    beforeSend: function () {
                        $('#loading').show();
                    },
                    complete: function () {
                        $('#loading').hide();
                    },
                    error: function (xhr, status, error) {
                        console.error(xhr.responseText);
                    }
                });
            });
        });
    </script>
}