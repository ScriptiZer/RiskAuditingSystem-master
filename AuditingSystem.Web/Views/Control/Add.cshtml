@model Control
@{
    ViewData["Title"] = "Control Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/css/addeditstyle.css" rel="stylesheet" />
 
<div class="row">
    <div class="col-md-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body">
                <h4 class="card-title">Add New Control</h4>
                <form class="forms-sample" id="AddForm">
                    <div class="row">
                        <div class="col-6">
                            <div class="form-group">
                                <label for="Code">Code</label>
                                <input type="text" class="form-control" id="Code" name="Code" placeholder="Generate Code">
                                <span asp-validation-for="Code" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="ControlTypeId">Control Type</label>
                                @Html.DropDownList("ControlTypeId", null, "-- Select One --", new { @class = "form-control", @id = "ControlType" , @name="ControlTypeId"})
                                <span asp-validation-for="ControlTypeId" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="ControlFrequencyId">Control Frequency</label>
                                @Html.DropDownList("ControlFrequencyId", null, "-- Select One --", new { @class = "form-control", @id = "ControlFrequency" , @name="ControlFrequencyId"})
                                <span asp-validation-for="ControlFrequencyId" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="RiskIdentificationId">Risk Identification</label>
                                @Html.DropDownList("RiskIdentificationId", null, "-- Select One --", new { @class = "form-control", @id = "RiskIdentification" , @name="RiskIdentificationId"})
                                <span asp-validation-for="RiskIdentificationId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="form-group">
                                <label for="Name">Name</label>
                                <textarea type="text" class="form-control" id="Name" name="Name" placeholder="Control Name"></textarea>
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="ControlProcessId">Control Process</label>
                                @Html.DropDownList("ControlProcessId", null, "-- Select One --", new { @class = "form-control", @id = "ControlProcess" , @name="ControlProcessId"})
                                <span asp-validation-for="ControlProcessId" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="ControlEffectivenessId">Control Effectiveness</label>
                                @Html.DropDownList("ControlEffectivenessId", null, "-- Select One --", new { @class = "form-control", @id = "ControlEffectiveness" , @name="ControlEffectivenessId"})
                                <span asp-validation-for="ControlEffectivenessId" class="text-danger"></span>
                            </div>
                            <div class="form-group">
                                <label for="ControlEffectivenessRating">Control Effectiveness Rating</label>
                                <input readonly type="text" class="form-control" id="ControlEffectivenessRating" name="ControlEffectivenessRating" placeholder="Control Effectiveness Rating">
                                <span asp-validation-for="ControlEffectivenessRating" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label for="Description">Description</label>
                                <textarea type="text" class="form-control" id="Description" name="Description" placeholder="Description"></textarea>
                            </div>
                        </div>
                    </div>

                    <div class="float-end">
                        <button id="btnCancel" class="btn btn-secondary">Cancel</button>
                        <button id="saveButton" type="button" class="btn btn-primary me-2">Save Data</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts{ 

    <script>
        $(document).ready(function () {
            $('#Description').summernote();
            $('#Name').summernote();

            $("#ControlEffectiveness").change(function () {
                var selectedText = $("#ControlEffectiveness option:selected").text();
                var parts = selectedText.split('-');
                var numberBeforeDash = parts[0].trim();
                var ControlEffectiveness = parseInt(numberBeforeDash) || 0;
                $("#ControlEffectivenessRating").val(ControlEffectiveness);
            });


            $("#AddForm").validate({
                rules: {
                    Code: {
                        required: true
                    },
                    Name: {
                        required: true
                    },
                    Description: {
                        required: true
                    },
                    ControlTypeId: {
                        required: true
                    },
                    ControlProcessId: {
                        required: true
                    },
                    ControlFrequencyId: {
                        required: true
                    },
                    ControlEffectivenessId: {
                        required: true
                    },
                    RiskIdentificationId: {
                        required: true
                    },
                    ControlEffectivenessRating: {
                        required: true
                    }
                },
                messages: {
                    Code: {
                        required: "The Code field is required"
                    },
                    Name: {
                        required: "The Name field is required"
                    },
                    Description: {
                        required: "The Description field is required"
                    },
                    ControlTypeId: {
                        required: "The Control Type is required"
                    },
                    ControlProcessId: {
                        required: "The Control Process field is required"
                    },
                    ControlFrequencyId: {
                        required: "The Control Frequency field is required"
                    },
                    ControlEffectivenessId: {
                        required: "The Control Effectiveness field is required"
                    },
                    RiskIdentificationId: {
                        required: "The Risk Identification field is required"
                    },
                    ControlEffectivenessRating: {
                        required: "The Control Effectiveness Rating field is required"
                    }
                },
                errorPlacement: function (error, element) {
                    if (element.is("select")) {
                        error.insertAfter(element.siblings("span"));
                    } else {
                        error.insertAfter(element);
                    }
                }
            });

            $(document).on("click", "#btnCancel", function (e) {
                e.preventDefault();
                window.location.href = '/Control/Index';
            });

            $("#saveButton").click(function () {
                var htmlDescription = $('#Description').summernote('code');
                var htmlName = $('#Name').summernote('code');

                if ($("#AddForm").valid()) {
                    var formData = {
                        Code: $("#Code").val(),
                        Name: htmlName,
                        Description: htmlDescription,
                        ControlTypeId: $("#ControlType").val(),
                        ControlProcessId: $("#ControlProcess").val(),
                        ControlFrequencyId: $("#ControlFrequency").val(),
                        ControlEffectivenessId: $("#ControlEffectiveness").val(),
                        RiskIdentificationId: $("#RiskIdentification").val(),
                        ControlEffectivenessRating: $("#ControlEffectivenessRating").val()
                    };

                    swal({
                        title: "Saving...",
                        text: "Please wait.",
                        allowOutsideClick: false,
                        showConfirmButton: false, // إخفاء زر التأكيد
                        showCancelButton: false, // إخفاء زر الإلغاء
                        showCloseButton: false, // إخفاء زر الإغلاق
                        onBeforeOpen: () => {
                            swal.showLoading(); // إضافة شريط التقدم
                        }
                    });

                    setTimeout(function () {
                        $.ajax({
                            url: "/api/Controls",
                            method: "POST",
                            dataType: 'json',
                            contentType: "application/json",
                            data: JSON.stringify(formData),
                            success: function (response) {
                                swal.close(); // إغلاق SweetAlert بعد النجاح
                                swal({
                                    title: "Success",
                                    text: "Your data has been saved",
                                    icon: "success",
                                    position: "top-end", // تحديد الوضعية في أعلى الزاوية اليمنى
                                    timer: 2000, // فترة الزمن بالميلي ثانية (هنا 2000 ميلي ثانية = 2 ثانية)
                                    allowOutsideClick: false,
                                    showConfirmButton: false, // إخفاء زر التأكيد
                                    showCancelButton: false, // إخفاء زر الإلغاء
                                    showCloseButton: false // إخفاء زر الإغلاق
                                }).then(function () {
                                    window.location.href = '/Control/Index';
                                });
                            },
                            error: function (error) {
                                if (error.responseJSON && error.responseJSON.errors) {
                                    swal({
                                        title: "Opps...",
                                        text: "Something went wrong!",
                                        icon: "error",
                                        position: "top-end", // تحديد الوضعية في أعلى الزاوية اليمنى
                                        timer: 2000, // فترة الزمن بالميلي ثانية (هنا 2000 ميلي ثانية = 2 ثانية)
                                        allowOutsideClick: false,
                                        showConfirmButton: false, // إخفاء زر التأكيد
                                        showCancelButton: false, // إخفاء زر الإلغاء
                                        showCloseButton: false // إخفاء زر الإغلاق
                                    });
                                }
                            }
                        });
                    }, 2000);
                }
            });
        });
    </script>
}
